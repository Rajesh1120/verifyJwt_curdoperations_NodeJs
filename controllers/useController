
const asyncHandler=require('express-async-handler')
const User =require('../models/userModel')
const bcrypt=require('bcrypt')
const jwt=require('jsonwebtoken')

const registerUser=asyncHandler(async(req,res)=>{
    const {username,email,password} = req.body;
    if (!username  || !email  || !password){
        res.status(400).json({
            message:"please enter all fields"})
    }else{
        const userAvaliable= await User.findOne({email});
        if (userAvaliable){
            throw new Error("Registered email exists");
        }
        else{
            const hashpassword=await bcrypt.hash(password,10)
        console.log(hashpassword)
        const createUser=await User.create({
            username,
            email,
            password:hashpassword.toString()
        })
            if (createUser){
                res.status(200).json({message: "User created succcesfully ",username:createUser.username, _id:createUser.id})
            }
        
        }
        
    }
     
})


const loginUser=asyncHandler(async(req,res)=>{

    const{email,password}=req.body;
    const loginUser=await User.findOne({email});
    if (loginUser && (await bcrypt.compare(password,loginUser.password))){
        const accessToken= await jwt.sign({
            loginUser:{
                username:loginUser.username,
                email:loginUser.email,
                id:loginUser.id
            }
        },process.env.ACCESS_TOKEN_SECRET,
        // {expiresIn:"20m"}
    )

        res.status(200).json({accessToken})
        
    }else{
        res.status(401)
        throw new Error("Unauthorized user")
    }

    
})

const currentUser=asyncHandler(async(req,res)=>{
    res.json({message:"Register the user"});
}) 

module.exports={
    registerUser,
        loginUser,
        currentUser
}